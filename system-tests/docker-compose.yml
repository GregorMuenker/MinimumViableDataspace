services:

  # EDC Connector to simulate a dataspace participant acting as a data provider which is located in EU.
  lieferant1:
    container_name: lieferant1
    build:
      context: ../launchers/connector_LF
      args:
        JVM_ARGS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    environment:
      IDS_WEBHOOK_ADDRESS: http://lieferant1:8282
      EDC_BLOBSTORE_ENDPOINT_TEMPLATE: "http://azurite:10000/%s"
      EDC_CONNECTOR_NAME: lieferant1
      EDC_IDENTITY_DID_URL: did:web:did-server:lieferant1
      EDC_VAULT: /resources/vault/lieferant1/lieferant1-vault.properties
      EDC_KEYSTORE: /resources/vault/lieferant1/lieferant1-keystore.jks
      EDC_SELF_DESCRIPTION_DOCUMENT_PATH: /resources/self-description/lieferant1/sdd.json
      EDC_KEYSTORE_PASSWORD: test123
      EDC_API_AUTH_KEY: ApiKeyDefaultValue
      EDC_IAM_DID_WEB_USE_HTTPS: "false"
      EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS: 5
      EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS: 5
      EDC_CATALOG_CACHE_PARTITION_NUM_CRAWLERS: 5
      REGISTRATION_SERVICE_API_URL: http://registration-service:8184/authority
      EDC_WEB_REST_CORS_ENABLED: "true"
      EDC_WEB_REST_CORS_HEADERS: "origin,content-type,accept,authorization,x-api-key"
    depends_on:
      - did-server
      - azurite
      - registration-service
    ports:
      - "9191:9191"
      - "8181:8181"
      - "5005:5005"
      - "7171:7171"
    volumes:
      - ./resources:/resources

  # EDC Connector to simulate a dataspace participant acting as a data consumer which is located in EU.
  lieferant2:
    container_name: lieferant2
    build:
      context: ../launchers/connector_LF
      args:
        JVM_ARGS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006"
    environment:
      IDS_WEBHOOK_ADDRESS: http://lieferant2:8282
      EDC_BLOBSTORE_ENDPOINT_TEMPLATE: "http://azurite:10000/%s"
      EDC_CONNECTOR_NAME: lieferant2
      EDC_IDENTITY_DID_URL: did:web:did-server:lieferant2
      EDC_VAULT: /resources/vault/lieferant2/lieferant2-vault.properties
      EDC_KEYSTORE: /resources/vault/lieferant2/lieferant2-keystore.jks
      EDC_SELF_DESCRIPTION_DOCUMENT_PATH: /resources/self-description/lieferant2/sdd.json
      EDC_KEYSTORE_PASSWORD: test123
      EDC_API_AUTH_KEY: ApiKeyDefaultValue
      EDC_IAM_DID_WEB_USE_HTTPS: "false"
      EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS: 5
      EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS: 5
      EDC_CATALOG_CACHE_PARTITION_NUM_CRAWLERS: 5
      REGISTRATION_SERVICE_API_URL: http://registration-service:8184/authority
      EDC_WEB_REST_CORS_ENABLED: "true"
      EDC_WEB_REST_CORS_HEADERS: "origin,content-type,accept,authorization,x-api-key"
    depends_on:
      - did-server
      - azurite
      - registration-service
    ports:
      - "9192:9191"
      - "8182:8181"
      - "5006:5006"
      - "7172:7171"
    volumes:
      - ./resources:/resources

  # EDC Connector to simulate a dataspace participant acting as a consumer which is located in US.
  vnb:
    container_name: vnb
    build:
      context: ../launchers/connector_VNB
      args:
        JVM_ARGS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007"
    environment:
      IDS_WEBHOOK_ADDRESS: http://vnb:8282
      EDC_BLOBSTORE_ENDPOINT_TEMPLATE: "http://azurite:10000/%s"
      EDC_CONNECTOR_NAME: vnb
      EDC_IDENTITY_DID_URL: did:web:did-server:vnb
      EDC_VAULT: /resources/vault/vnb/vnb-vault.properties
      EDC_KEYSTORE: /resources/vault/vnb/vnb-keystore.jks
      EDC_SELF_DESCRIPTION_DOCUMENT_PATH: /resources/self-description/vnb/sdd.json
      EDC_KEYSTORE_PASSWORD: test123
      EDC_API_AUTH_KEY: ApiKeyDefaultValue
      EDC_IAM_DID_WEB_USE_HTTPS: "false"
      EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS: 5
      EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS: 5
      EDC_CATALOG_CACHE_PARTITION_NUM_CRAWLERS: 5
      REGISTRATION_SERVICE_API_URL: http://registration-service:8184/authority
      EDC_WEB_REST_CORS_ENABLED: "true"
      EDC_WEB_REST_CORS_HEADERS: "origin,content-type,accept,authorization,x-api-key"
    depends_on:
      - did-server
      - azurite
      - registration-service
    ports:
      - "9193:9191"
      - "8183:8181"
      - "5007:5007"
      - "7173:7171"
    volumes:
      - ./resources:/resources

  # Usages postman collections for initial data seeding to connectors.
  newman:
    container_name: newman
    image: postman/newman:ubuntu
    entrypoint: /bin/bash
    command: deployment/seed-data.sh
    volumes:
      - ../deployment/:/deployment
    working_dir: /
    environment:
      API_KEY: ApiKeyDefaultValue
      EDC_HOST: lieferant1:lieferant2:vnb
      ASSETS_STORAGE_ACCOUNT: lieferant1assets:lieferant2assets:vnbassets
      PARTICIPANT_ID: lieferant1:lieferant2:vnb
    depends_on:
      lieferant1:
        condition: service_healthy
      lieferant2:
        condition: service_healthy
      vnb:
        condition: service_healthy

  # A nginx based HTTP server to serve dataspace participants DIDs.
  did-server:
    container_name: did-server
    image: nginx
    volumes:
      - ./resources/webdid:/usr/share/nginx/html
    ports:
      - "7070:80"

  # Azure blob storage simulator.
  azurite:
    container_name: azurite
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - 10000:10000
    environment:
      AZURITE_ACCOUNTS: lieferant1assets:key1;lieferant2assets:key2;vnbassets:key3

  # Dataspace registration service authority.
  registration-service:
    container_name: registration-service
    build:
      #e.g. /home/user/RegistrationService/launcher
      context: ../launchers/registrationservice
      args:
        JVM_ARGS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008"
    environment:
      JWT_AUDIENCE: http://registration-service:8184/authority
      WEB_HTTP_AUTHORITY_PORT: 8184
      WEB_HTTP_AUTHORITY_PATH: /authority
      EDC_IAM_DID_WEB_USE_HTTPS: "false"
      EDC_CONNECTOR_NAME: registration-service
      EDC_IDENTITY_DID_URL: did:web:did-server:registration-service
      EDC_SELF_DESCRIPTION_DOCUMENT_PATH: /resources/self-description/registration-service/sdd.json
      EDC_VAULT: /resources/vault/registration-service/registration-service-vault.properties
      EDC_KEYSTORE: /resources/vault/registration-service/registration-service-keystore.jks
      EDC_KEYSTORE_PASSWORD: test123
      EDC_ERROR_RESPONSE_VERBOSE: "true"
    ports:
      - "8184:8184"
      - "8185:8181"
      - "5008:5008"
      - "7174:7171"
    volumes:
      - ./resources:/resources

  # cli-tools to help setup MVD environment e.g. registering participant to authority.
  cli-tools:
    container_name: cli-tools
    build:
      context: ./resources/cli-tools
    volumes:
      - ./resources:/resources
      - ../resources:/common-resources
    depends_on:
      lieferant1:
        condition: service_healthy
      lieferant2:
        condition: service_healthy
      vnb:
        condition: service_healthy
      registration-service:
        condition: service_healthy

  # Data Dashboard (MVD UI) for participant lieferant1
  lieferant1-datadashboard:
    container_name: lieferant1-datadashboard
    build:
      context: ${MVD_UI_PATH}
    volumes:
      - ./resources/appconfig/lieferant1:/usr/share/nginx/html/assets/config
    depends_on:
      lieferant1:
        condition: service_healthy
    ports:
      - "7080:80"
    profiles: ["ui"]

      # Data Dashboard (MVD UI) for participant lieferant2
  lieferant2-datadashboard:
    container_name: lieferant2-datadashboard
    build:
      context: ${MVD_UI_PATH}
    volumes:
      - ./resources/appconfig/lieferant2:/usr/share/nginx/html/assets/config
    depends_on:
      lieferant2:
        condition: service_healthy
    ports:
      - "7081:80"
    profiles: ["ui"]

  # Data Dashboard (MVD UI) for participant VNB
  vnb-datadashboard:
    container_name: vnb-datadashboard
    build:
      context: ${MVD_UI_PATH}
    volumes:
      - ./resources/appconfig/vnb:/usr/share/nginx/html/assets/config
    depends_on:
      vnb:
        condition: service_healthy
    ports:
      - "7082:80"
    profiles: ["ui"]
